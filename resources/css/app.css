@import 'tailwindcss/base';
@import 'tailwindcss/components';
@import 'tailwindcss/utilities';
/* @import '../../node_modules/@vueform/multiselect/themes/tailwind.scss'; */
@import 'tailwind.scss';
.btn-spinner,
.btn-spinner:after {
    border-radius: 50%;
    width: 1.5em;
    height: 1.5em;
}

.btn-spinner {
    font-size: 10px;
    position: relative;
    text-indent: -9999em;
    border-top: 0.2em solid white;
    border-right: 0.2em solid white;
    border-bottom: 0.2em solid white;
    border-left: 0.2em solid transparent;
    transform: translateZ(0);
    animation: spinning 1s infinite linear;
}

@keyframes spinning {
    0% {
        transform: rotate(0deg);
    }
    100% {
        transform: rotate(360deg);
    }
}

.t-header.arrow-up::after {
    content: " ▲";
}

.t-header.arrow-down::after {
    content: " ▼";
}

.moving-card {
    @apply border opacity-50 border-gray-500 bg-gray-100;
}

.inner-shadow {
    outline: 0;
    -webkit-box-shadow: inset 0 3px 5px rgb(0 0 0 / 13%);
    box-shadow: inset 0 3px 5px rgb(0 0 0 / 13%);
    @apply border border-gray-300
}

/* PWA */
@supports (padding-top: constant(safe-area-inset-top)) {
    body {
      padding: env(safe-area-inset-top) env(safe-area-inset-right) env(safe-area-inset-bottom) env(safe-area-inset-left);
    }
  }
  
  @media (display-mode: fullscreen) {
    body {
      padding: 0;
    }
  }
  
  @media (display-mode: standalone) {
    body {
      padding: 0;
    }
  }
  
  /* Older browsers (which don't support CSS variables) */
  body {
    height: 100%;
  }
  
  /* Browsers which partially support CSS variables (iOS 11.0 – 11.2)
  @supports (padding-top: constant(safe-area-inset-top)) {
    body {
      --safe-area-inset-top: constant(safe-area-inset-top);
      height: calc(100% + var(--safe-area-inset-top));
    }
  }
  /* Adapted from https://medium.com/@draganeror/iphone-x-layout-features-with-css-environment-variables-d57423433dec */
  /* Browsers which fully support CSS variables (iOS 11.2+). */
  @supports (padding-top: env(safe-area-inset-top)) {
    body {
      --safe-area-inset-top: env(safe-area-inset-top);
      height: 100%;
    }
  }
  
  @media (display-mode: fullscreen) {
    body {
      height: 100%;
    }
  }
  
  @media (display-mode: standalone) {
    body {
      height: 100%;
    }
  }